// Place all the styles related to the homes controller here.
// They will automatically be included in application.css.
// You can use Sass (SCSS) here: http://sass-lang.com/
// https://github.com/twbs/bootstrap-sass
// "bootstrap-sprockets" must be imported before "bootstrap" and "bootstrap/variables"
// Since we have used the bootstrap gem, using the normalize as part of it.
// Normalize should reset many values to keep it consistent across browsers.
@import "bootstrap/normalize";
// All the font definitions will be loaded from this file.
@import "fonts";
body {
	//setting the back ground color 
	background-color: #B3B3B3;
	// Font as Lato-Light. Fall back is 
	font-family: 'Lato-Light';
}

//The banner
.banner {
	// dimensions 
	width: 560px;
	height: 200px;
	// For horizontally centering it
	margin: 0 auto 0 auto;
	// border : 1px red dashed;
	font-size: 64px;
	// These two are for horizontal and vertical alignment
	// Horizontal alignment
	text-align: center;
	// Vertical alignment (refer http://stackoverflow.com/questions/8865458)
	// line-height: 200px;
}

// Vertical align http://zerosixthree.se/vertical-align-anything-with-just-3-lines-of-css/
// paragraph inside banner
// This is the "space" css selector indicating "ancestor descendent" 
// ie - any p as a descendet of banner
.banner p {
	position: relative;
	top: 50%;
	-webkit-transform: translateY(-50%);
	-ms-transform: translateY(-50%);
	transform: translateY(-50%);
	// important paragraph adds additional content and increasing height
	margin: 0;
}

//The list table
.learning-list-header {
	// dimensions 
	width: 900px;
	height: 80px;
	// For horizontally centering it
	margin: 0 auto;
	text-align: center;
	font-family: VarelaRound-Regular;
	font-size: 36px;
}

//The list rows 
.learning-list-rows {
	// dimensions 
	width: 900px;
	height: 80px;
	// For horizontally centering it
	margin: 0 auto;
	text-align: center;
	font-family: VarelaRound-Regular;
	font-size: 36px;
}


.my-version {
	// dimensions 
	width: 300px;
	height: inherit;
	float: left;
	//Using hsla as per http://ux.stackexchange.com/a/2602
	//background-color: #279371; //fall back
	background-color: hsla(161, 58%, 36%, 1);
	p {
		position: relative;
		top: 50%;
		-webkit-transform: translateY(-50%);
		-ms-transform: translateY(-50%);
		transform: translateY(-50%);
		// important paragraph adds additional content and increasing height
		margin: 0;
	}
}

.book-version {
	width: 300px;
	height: inherit;
	float: left;
	//background-color: #7A6EE3; //fall back
	background-color: hsla(246, 68%, 66%, 1);
	a {
		text-decoration: none;
		color: #D0D8E7;
	}
	p {
		position: relative;
		top: 50%;
		-webkit-transform: translateY(-50%);
		-ms-transform: translateY(-50%);
		transform: translateY(-50%);
		// important paragraph adds additional content and increasing height
		margin: 0;
	}
}

.opal-version {
	width: 300px;
	height: inherit;
	float: right;
	//background-color: #406BEC; //fall back
	background-color: hsla(225, 82%, 59%, 1);
	a {
		text-decoration: none;
		color: #FFFE00;
	}
	p {
		position: relative;
		top: 50%;
		-webkit-transform: translateY(-50%);
		-ms-transform: translateY(-50%);
		transform: translateY(-50%);
		// important paragraph adds additional content and increasing height
		margin: 0;
	}
}